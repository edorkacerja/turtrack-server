# Application and Server config
spring.application.name=turtrack-server
server.port=9999


# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Logging Configurations
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=OFF
logging.file.name=logs/application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=10
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Spring Batch Configurations
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always

# RabbitMQ Configuration
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

# RabbitMQ Queue Names
#rabbitmq.queue.vehicle-details=queue.vehicle.details
#rabbitmq.queue.dr-availability=queue.dr.availability
#rabbitmq.queue.cells=queue.cells

# RabbitMQ Exchange
rabbitmq.exchange=turtrack.exchange
#spring.rabbitmq.listener.simple.acknowledge-mode=manual

# RabbitMQ Routing Keys
rabbitmq.routing-key.vehicle-details=turtrack.vehicle.details
rabbitmq.routing-key.dr-availability=turtrack.dr.availability
rabbitmq.routing-key.cells=turtrack.cells

spring.session.store-type=none


# JWT
app.jwt.secret=your-very-long-and-secure-jwt-secret-key-here-minimum-256-bits
app.jwt.refresh-secret=your-other-secure-refresh-token-secret-key
# 15 mins
app.jwt.expiration-milliseconds=900000
# 7 days
app.jwt.refresh-expiration-milliseconds=604800000

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=395493307287-d11b2e995db7sr6lg0f3p7b0dr66dl8a.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=https://turtrack.us-east-1.elasticbeanstalk.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# If you want to configure additional OAuth2 properties
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Disable Spring's default request body handling
# Disable Spring's automatic request body processing for webhooks
spring.mvc.formcontent.filter.enabled=false
spring.docker.compose.enabled=false

server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true

# Enable detailed logging
logging.level.com.turtrack.server=DEBUG

# Stripe
#stripe.secret-key=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
stripe.secret-key=sk_test_51QLUCgITHar10Mxd9kPsQ3BPGDbYLwlf152cYSdG2lLmid278qRLCZBqX98a6kPoI2Q6b6lpX6J4A2h4UhUpwbeM00e5lPJd3c
#stripe.publishable-key=pk_live_51QLUCgITHar10MxdXcPqDsvADQPupNOto8bV8BojVpFjm2khG9FAZEAqVVuBwFeWdL3X88aPhZ2hrh819Gk6fvre00JYvksIeb
stripe.publishable-key=pk_test_51QLUCgITHar10MxdsK8JJPQftybIdHVeQFHZyCHZ28ihnOcHX81nsGcTe8V9qSshtO1o07ilHMnQ5ZpAawldStMr00r0iORief
stripe.webhook-secret=whsec_328344ae3e518d4a41b1e6e38d133bf670050c3e04cba669d20cda0208ebd9a0
