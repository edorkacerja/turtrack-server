version: '3.8'
services:
  turtrack-manager-db:
    image: postgres:16-alpine
    container_name: turtrack-manager-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - turtrack-manager-db-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - turtrack-manager-network
      - turtrack_common_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: turtrack-rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - turtrack-manager-network
      - turtrack_common_network

#  turtrack-manager:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: turtrack-manager
#    container_name: turtrack-manager-app
#    ports:
#      - "9999:9999"
#    depends_on:
#      - turtrack-manager-db
#      - rabbitmq
#    environment:
#      SERVER_PORT: 9999
#      SPRING_DATASOURCE_TURTRACK_URL: jdbc:postgresql://timescaledb-turtrack:5432/turo
#      SPRING_DATASOURCE_TURTRACK_USERNAME: turo_user
#      SPRING_DATASOURCE_TURTRACK_PASSWORD: turo_password
#      SPRING_DATASOURCE_MANAGER_URL: jdbc:postgresql://turtrack-manager-db:5432/turtrack_manager_db
#      SPRING_DATASOURCE_MANAGER_USERNAME: turtrack_user
#      SPRING_DATASOURCE_MANAGER_PASSWORD: turtrack_password
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#      SPRING_RABBITMQ_USERNAME: guest
#      SPRING_RABBITMQ_PASSWORD: guest

volumes:
  turtrack-manager-db-data:
  rabbitmq_data:

networks:
  turtrack-manager-network:
    name: turtrack-manager-network
  kafka_network:
    external: true
  turtrack_common_network:
    external: true