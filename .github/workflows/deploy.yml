name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - prod  # Trigger the pipeline on pushes to the prod branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the JAR file
      - name: Build with Maven
        env:
          SPRING_PROFILES_ACTIVE: prod  # Use the prod profile
        run: mvn clean package -Dspring.profiles.active=prod -DskipTests

      # Step 4: Debug the target directory (optional but helpful)
      - name: Debug target directory
        run: ls -R target/

      # Step 5: Configure AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 6: Install Elastic Beanstalk CLI
      - name: Install Elastic Beanstalk CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install awsebcli --upgrade

      # Step 7: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          EB_APP_NAME="turtrack-server"
          EB_ENV_NAME="Turtrack-server-env"
          VERSION_LABEL=$GITHUB_SHA
          JAR_FILE="target/turtrack-server-0.0.1-SNAPSHOT.jar"

          # Ensure JAR file exists
          if [ ! -f "$JAR_FILE" ]; then
            echo "Error: JAR file $JAR_FILE not found!"
            exit 1
          fi

          # Create a ZIP file containing the JAR
          mkdir deploy
          cp $JAR_FILE deploy/
          cd deploy
          zip -r app.zip ./
          cd ..

          # Initialize and deploy using EB CLI
          eb init $EB_APP_NAME --platform java --region $AWS_REGION --source
          eb use $EB_ENV_NAME
          eb deploy --label $VERSION_LABEL
