name: Build and Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - prod

env:
  EB_APP_NAME: "turtrack-server"
  EB_ENV_NAME: "Turtrack-server-env"
  JAR_NAME: "turtrack-server-0.0.1-SNAPSHOT.jar"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        env:
          SPRING_PROFILES_ACTIVE: prod
        run: |
          mvn clean package -DskipTests
          echo "Build completed successfully"
          ls -la target/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup SSL Configuration
        run: |
          mkdir -p .ebextensions
          cat > .ebextensions/https-instance.config << 'EOL'
          files:
            /etc/pki/tls/certs/server.crt:
              mode: "000400"
              owner: root
              group: root
              content: |
                ${{ secrets.SSL_CERTIFICATE }}
          
            /etc/pki/tls/certs/server.key:
              mode: "000400"
              owner: root
              group: root
              content: |
                ${{ secrets.SSL_PRIVATE_KEY }}
          
          container_commands:
            01restart_nginx:
              command: "service nginx restart"
          EOL
          
          # Update domain name in nginx conf
          sed -i "s/\${DOMAIN_NAME}/${{ vars.DOMAIN_NAME }}/g" .platform/nginx/conf.d/ssl.conf

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp target/${{ env.JAR_NAME }} deploy/application.jar
          cp -r .ebextensions deploy/
          cp -r .platform deploy/
          cd deploy && zip ../deploy.zip -r * .[^.]* || true
          cd ..

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: "v-${{ github.sha }}"
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 300
          use_existing_version_if_available: false
          ignore_health_check: true